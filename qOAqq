[1mdiff --git a/README-pip.md b/README-pip.md[m
[1mindex fd8dd046..b6a00d32 100644[m
[1m--- a/README-pip.md[m
[1m+++ b/README-pip.md[m
[36m@@ -2,10 +2,10 @@[m
 [m
 Live your data-life pro-actively, track website content changes and receive notifications via Discord, Email, Slack, Telegram and 70+ more[m
 [m
[31m-[<img src="https://raw.githubusercontent.com/dgtlmoon/changedetection.io/master/docs/screenshot.png" style="max-width:100%;" alt="Self-hosted web page change monitoring"  title="Self-hosted web page change monitoring"  />](https://changedetection.io)[m
[32m+[m[32m[<img src="https://raw.githubusercontent.com/dgtlmoon/changedetection.io/master/docs/screenshot.png" style="max-width:100%;" alt="Self-hosted web page change monitoring"  title="Self-hosted web page change monitoring"  />](https://lemonade.changedetection.io/start?src=pip)[m
 [m
 [m
[31m-[**Don't have time? Let us host it for you! try our extremely affordable subscription use our proxies and support!**](https://changedetection.io) [m
[32m+[m[32m[**Don't have time? Let us host it for you! try our extremely affordable subscription use our proxies and support!**](https://lemonade.changedetection.io/start)[m[41m [m
 [m
 [m
 #### Example use cases[m
[1mdiff --git a/README.md b/README.md[m
[1mindex f9df5971..13589fa3 100644[m
[1m--- a/README.md[m
[1m+++ b/README.md[m
[36m@@ -5,13 +5,13 @@[m
 _Live your data-life pro-actively._ [m
 [m
 [m
[31m-[<img src="https://raw.githubusercontent.com/dgtlmoon/changedetection.io/master/docs/screenshot.png" style="max-width:100%;" alt="Self-hosted web page change monitoring"  title="Self-hosted web page change monitoring"  />](https://changedetection.io?src=github)[m
[32m+[m[32m[<img src="https://raw.githubusercontent.com/dgtlmoon/changedetection.io/master/docs/screenshot.png" style="max-width:100%;" alt="Self-hosted web page change monitoring"  title="Self-hosted web page change monitoring"  />](https://lemonade.changedetection.io/start?src=github)[m
 [m
 [![Release Version][release-shield]][release-link] [![Docker Pulls][docker-pulls]][docker-link] [![License][license-shield]](LICENSE.md)[m
 [m
 ![changedetection.io](https://github.com/dgtlmoon/changedetection.io/actions/workflows/test-only.yml/badge.svg?branch=master)[m
 [m
[31m-[**Don't have time? Let us host it for you! try our $8.99/month subscription - use our proxies and support!**](https://changedetection.io) , _half the price of other website change monitoring services!_[m
[32m+[m[32m[**Don't have time? Let us host it for you! try our $8.99/month subscription - use our proxies and support!**](https://lemonade.changedetection.io/start) , _half the price of other website change monitoring services and comes with unlimited watches & checks!_[m
 [m
 - Chrome browser included.[m
 - Super fast, no registration needed setup.[m
[36m@@ -22,11 +22,11 @@[m [m_Live your data-life pro-actively._[m
 [m
 Available when connected to a <a href="https://github.com/dgtlmoon/changedetection.io/wiki/Playwright-content-fetcher">playwright content fetcher</a> (included as part of our subscription service)[m
 [m
[31m-[<img src="https://raw.githubusercontent.com/dgtlmoon/changedetection.io/master/docs/visualselector-anim.gif" style="max-width:100%;" alt="Self-hosted web page change monitoring context difference "  title="Self-hosted web page change monitoring context difference " />](https://changedetection.io?src=github)[m
[32m+[m[32m[<img src="https://raw.githubusercontent.com/dgtlmoon/changedetection.io/master/docs/visualselector-anim.gif" style="max-width:100%;" alt="Self-hosted web page change monitoring context difference "  title="Self-hosted web page change monitoring context difference " />](https://lemonade.changedetection.io/start?src=github)[m
 [m
 ### Easily see what changed, examine by word, line, or individual character.[m
 [m
[31m-[<img src="https://raw.githubusercontent.com/dgtlmoon/changedetection.io/master/docs/screenshot-diff.png" style="max-width:100%;" alt="Self-hosted web page change monitoring context difference "  title="Self-hosted web page change monitoring context difference " />](https://changedetection.io?src=github)[m
[32m+[m[32m[<img src="https://raw.githubusercontent.com/dgtlmoon/changedetection.io/master/docs/screenshot-diff.png" style="max-width:100%;" alt="Self-hosted web page change monitoring context difference "  title="Self-hosted web page change monitoring context difference " />](https://lemonade.changedetection.io/start?src=github)[m
 [m
 [m
 ### Perform interactive browser steps[m
[36m@@ -35,7 +35,7 @@[m [mFill in text boxes, click buttons and more, setup your changedetection scenario.[m
 [m
 Using the **Browser Steps** configuration, add basic steps before performing change detection, such as logging into websites, adding a product to a cart, accept cookie logins, entering dates and refining searches.[m
 [m
[31m-[<img src="docs/browsersteps-anim.gif" style="max-width:100%;" alt="Self-hosted web page change monitoring context difference "  title="Website change detection with interactive browser steps, login, cookies etc" />](https://changedetection.io?src=github)[m
[32m+[m[32m[<img src="docs/browsersteps-anim.gif" style="max-width:100%;" alt="Self-hosted web page change monitoring context difference "  title="Website change detection with interactive browser steps, login, cookies etc" />](https://lemonade.changedetection.io/start?src=github)[m
 [m
 After **Browser Steps** have been run, then visit the **Visual Selector** tab to refine the content you're interested in.[m
 Requires Playwright to be enabled.[m
[36m@@ -238,7 +238,7 @@[m [mSupports managing the website watch list [via our API](https://changedetection.i[m
 Do you use changedetection.io to make money? does it save you time or money? Does it make your life easier? less stressful? Remember, we write this software when we should be doing actual paid work, we have to buy food and pay rent just like you.[m
 [m
 [m
[31m-Firstly, consider taking out a [change detection monthly subscription - unlimited checks and watches](https://changedetection.io?src=github) , even if you don't use it, you still get the warm fuzzy feeling of helping out the project. (And who knows, you might just use it!)[m
[32m+[m[32mFirstly, consider taking out a [change detection monthly subscription - unlimited checks and watches](https://lemonade.changedetection.io/start) , even if you don't use it, you still get the warm fuzzy feeling of helping out the project. (And who knows, you might just use it!)[m
 [m
 Or directly donate an amount PayPal [![Donate](https://img.shields.io/badge/Donate-PayPal-green.svg)](https://www.paypal.com/donate/?hosted_button_id=7CP6HR9ZCNDYJ)[m
 [m
[1mdiff --git a/changedetectionio/__init__.py b/changedetectionio/__init__.py[m
[1mindex 11b9a2d6..bb1f83eb 100644[m
[1m--- a/changedetectionio/__init__.py[m
[1m+++ b/changedetectionio/__init__.py[m
[36m@@ -416,18 +416,18 @@[m [mdef changedetection_app(config=None, datastore_o=None):[m
         for uuid, watch in datastore.data['watching'].items():[m
 [m
             if limit_tag:[m
[31m-                # Support for comma separated list of tags.[m
[31m-                if not watch.get('tag'):[m
[31m-                    continue[m
[31m-                for tag_in_watch in watch.get('tag', '').split(','):[m
[31m-                    tag_in_watch = tag_in_watch.strip()[m
[31m-                    if tag_in_watch == limit_tag:[m
[31m-                        watch['uuid'] = uuid[m
[31m-                        if search_q:[m
[31m-                            if (watch.get('title') and search_q in watch.get('title').lower()) or search_q in watch.get('url', '').lower():[m
[31m-                                sorted_watches.append(watch)[m
[31m-                        else:[m
[31m-                            sorted_watches.append(watch)[m
[32m+[m[32m                if limit_tag in watch.get('tag', []):[m
[32m+[m[32m                    sorted_watches.append(watch)[m
[32m+[m[32m                continue[m
[32m+[m
[32m+[m[32m#                for tag_in_watch in watch.get('tag', []):[m
[32m+[m[32m#                    if tag_in_watch == limit_tag:[m
[32m+[m[32m#                        watch['uuid'] = uuid[m
[32m+[m[32m#                        if search_q:[m
[32m+[m[32m#                            if (watch.get('title') and search_q in watch.get('title').lower()) or search_q in watch.get('url', '').lower():[m
[32m+[m[32m#                                sorted_watches.append(watch)[m
[32m+[m[32m#                        else:[m
[32m+[m
 [m
             else:[m
                 #watch['uuid'] = uuid[m
[36m@@ -437,7 +437,6 @@[m [mdef changedetection_app(config=None, datastore_o=None):[m
                 else:[m
                     sorted_watches.append(watch)[m
 [m
[31m-        existing_tags = datastore.get_all_tags()[m
         form = forms.quickWatchForm(request.form)[m
         page = request.args.get(get_page_parameter(), type=int, default=1)[m
         total_count = len(sorted_watches)[m
[36m@@ -463,7 +462,7 @@[m [mdef changedetection_app(config=None, datastore_o=None):[m
                                  sort_attribute=request.args.get('sort') if request.args.get('sort') else request.cookies.get('sort'),[m
                                  sort_order=request.args.get('order') if request.args.get('order') else request.cookies.get('order'),[m
                                  system_default_fetcher=datastore.data['settings']['application'].get('fetch_backend'),[m
[31m-                                 tags=existing_tags,[m
[32m+[m[32m                                 tags=datastore.data['settings']['application'].get('tags'),[m
                                  watches=sorted_watches[m
                                  )[m
 [m
[36m@@ -606,9 +605,13 @@[m [mdef changedetection_app(config=None, datastore_o=None):[m
 [m
         # proxy_override set to the json/text list of the items[m
         form = forms.watchForm(formdata=request.form if request.method == 'POST' else None,[m
[31m-                               data=default,[m
[32m+[m[32m                               data=default[m
                                )[m
 [m
[32m+[m[32m        # For the form widget tag uuid lookup[m
[32m+[m[32m        form.tag.datastore = datastore # in _value[m
[32m+[m
[32m+[m
         form.fetch_backend.choices.append(("system", 'System settings default'))[m
 [m
         # form.browser_steps[0] can be assumed that we 'goto url' first[m
[36m@@ -659,6 +662,12 @@[m [mdef changedetection_app(config=None, datastore_o=None):[m
                 extra_update_obj['filter_text_replaced'] = True[m
                 extra_update_obj['filter_text_removed'] = True[m
 [m
[32m+[m[32m            # Because wtforms doesn't support accessing other data in process_ , but we convert the CSV list of tags back to a list of UUIDs[m
[32m+[m[32m            tag_uuids = [][m
[32m+[m[32m            if form.data.get('tag'):[m
[32m+[m[32m                for t in form.data.get('tag', '').split(','):[m
[32m+[m[32m                    tag_uuids.append(datastore.add_tag(name=t))[m
[32m+[m[32m                extra_update_obj['tag'] = tag_uuids[m
 [m
             datastore.data['watching'][uuid].update(form.data)[m
             datastore.data['watching'][uuid].update(extra_update_obj)[m
[36m@@ -1419,6 +1428,8 @@[m [mdef changedetection_app(config=None, datastore_o=None):[m
     import changedetectionio.blueprint.price_data_follower as price_data_follower[m
     app.register_blueprint(price_data_follower.construct_blueprint(datastore, update_q), url_prefix='/price_data_follower')[m
 [m
[32m+[m[32m    import changedetectionio.blueprint.tags as tags[m
[32m+[m[32m    app.register_blueprint(tags.construct_blueprint(datastore), url_prefix='/tags')[m
 [m
     # @todo handle ctrl break[m
     ticker_thread = threading.Thread(target=ticker_thread_check_time_launch_checks).start()[m
[1mdiff --git a/changedetectionio/api/api_v1.py b/changedetectionio/api/api_v1.py[m
[1mindex b30c0d63..bca7d758 100644[m
[1m--- a/changedetectionio/api/api_v1.py[m
[1m+++ b/changedetectionio/api/api_v1.py[m
[36m@@ -259,11 +259,14 @@[m [mclass CreateWatch(Resource):[m
         """[m
         list = {}[m
 [m
[31m-        tag_limit = request.args.get('tag', None)[m
[32m+[m[32m        tag_limit = request.args.get('tag')[m
         for k, watch in self.datastore.data['watching'].items():[m
[31m-            if tag_limit:[m
[31m-                if not tag_limit.lower() in watch.all_tags:[m
[31m-                    continue[m
[32m+[m[32m            # Watch tags by name (replace the other calls?)[m
[32m+[m[32m            p=watch.all_tags[m
[32m+[m[32m            x=1[m
[32m+[m[32m  #          if tag_limit:[m
[32m+[m[32m #               if not tag_limit.lower() in watch.all_tags:[m
[32m+[m[32m#                    continue[m
 [m
             list[k] = {'url': watch['url'],[m
                        'title': watch['title'],[m
[1mdiff --git a/changedetectionio/blueprint/tags/__init__.py b/changedetectionio/blueprint/tags/__init__.py[m
[1mnew file mode 100644[m
[1mindex 00000000..cc018f97[m
[1m--- /dev/null[m
[1m+++ b/changedetectionio/blueprint/tags/__init__.py[m
[36m@@ -0,0 +1,87 @@[m
[32m+[m[32mfrom flask import Blueprint, request, make_response, render_template, flash, url_for, redirect[m
[32m+[m[32mfrom changedetectionio.store import ChangeDetectionStore[m
[32m+[m[32mfrom changedetectionio import login_optionally_required[m
[32m+[m
[32m+[m
[32m+[m[32mdef construct_blueprint(datastore: ChangeDetectionStore):[m
[32m+[m[32m    tags_blueprint = Blueprint('tags', __name__, template_folder="templates")[m
[32m+[m
[32m+[m[32m    @tags_blueprint.route("/list", methods=['GET'])[m
[32m+[m[32m    @login_optionally_required[m
[32m+[m[32m    def tags_overview_page():[m
[32m+[m[32m        from .form import SingleTag[m
[32m+[m[32m        add_form = SingleTag(request.form)[m
[32m+[m[32m        output = render_template("groups-overview.html",[m
[32m+[m[32m                                 form=add_form,[m
[32m+[m[32m                                 available_tags=datastore.data['settings']['application'].get('tags', {}),[m
[32m+[m[32m                                 )[m
[32m+[m
[32m+[m[32m        return output[m
[32m+[m
[32m+[m[32m    @tags_blueprint.route("/add", methods=['POST'])[m
[32m+[m[32m    @login_optionally_required[m
[32m+[m[32m    def form_tag_add():[m
[32m+[m[32m        from .form import SingleTag[m
[32m+[m[32m        add_form = SingleTag(request.form)[m
[32m+[m
[32m+[m
[32m+[m[32m        if not add_form.validate():[m
[32m+[m[32m            for widget, l in add_form.errors.items():[m
[32m+[m[32m                flash(','.join(l), 'error')[m
[32m+[m[32m            return redirect(url_for('tags.tags_overview_page'))[m
[32m+[m
[32m+[m[32m#        title = request.form.get('name').strip()[m
[32m+[m[32m        #@todo validation[m
[32m+[m[32m        #if datastore.tag_exists_by_name(title):[m
[32m+[m[32m#            flash(f'The URL {title} already exists', "error")[m
[32m+[m[32m#            return redirect(url_for('tags.tags_overview_page'))[m
[32m+[m
[32m+[m[32m        flash("Tag added")[m
[32m+[m[32m        datastore.needs_write_urgent = True[m
[32m+[m[32m        return redirect(url_for('tags.tags_overview_page'))[m
[32m+[m
[32m+[m[32m    @tags_blueprint.route("/edit/<string:uuid>", methods=['GET'])[m
[32m+[m[32m    @login_optionally_required[m
[32m+[m[32m    def form_tag_edit(uuid):[m
[32m+[m[32m        from changedetectionio import forms[m
[32m+[m[32m        default = datastore.data['settings']['application']['tags'].get(uuid)[m
[32m+[m
[32m+[m[32m        form = forms.watchForm(formdata=request.form if request.method == 'POST' else None,[m
[32m+[m[32m                               data=default,[m
[32m+[m[32m                               )[m
[32m+[m[32m        form.datastore=datastore # needed?[m
[32m+[m
[32m+[m[32m        output = render_template("edit-tag.html",[m
[32m+[m[32m                                 form=form,[m
[32m+[m[32m                                 data=default[m
[32m+[m[32m                                 )[m
[32m+[m
[32m+[m[32m        return output[m
[32m+[m
[32m+[m
[32m+[m[32m    @tags_blueprint.route("/edit/<string:uuid>", methods=['POST'])[m
[32m+[m[32m    @login_optionally_required[m
[32m+[m[32m    def form_tag_edit_submit(uuid):[m
[32m+[m[32m        from changedetectionio import forms[m
[32m+[m
[32m+[m[32m        default = datastore.data['settings']['application']['tags'].get(uuid)[m
[32m+[m
[32m+[m[32m        form = forms.watchForm(formdata=request.form if request.method == 'POST' else None,[m
[32m+[m[32m                               data=default,[m
[32m+[m[32m                               )[m
[32m+[m[32m        # @todo subclass form so validation works[m
[32m+[m[32m        #if not form.validate():[m
[32m+[m[32m#            for widget, l in form.errors.items():[m
[32m+[m[32m#                flash(','.join(l), 'error')[m
[32m+[m[32m#           return redirect(url_for('tags.form_tag_edit_submit', uuid=uuid))[m
[32m+[m
[32m+[m[32m        datastore.data['settings']['application']['tags'][uuid].update(form.data)[m
[32m+[m[32m        datastore.needs_write_urgent = True[m
[32m+[m
[32m+[m[32m        return redirect(url_for('tags.tags_overview_page'))[m
[32m+[m
[32m+[m
[32m+[m[32m    @tags_blueprint.route("/delete/<string:uuid>", methods=['GET'])[m
[32m+[m[32m    def form_tag_delete(uuid):[m
[32m+[m[32m        return redirect(url_for('tags.tags_overview_page'))[m
[32m+[m[32m    return tags_blueprint[m
[1mdiff --git a/changedetectionio/blueprint/tags/form.py b/changedetectionio/blueprint/tags/form.py[m
[1mnew file mode 100644[m
[1mindex 00000000..22e8b077[m
[1m--- /dev/null[m
[1m+++ b/changedetectionio/blueprint/tags/form.py[m
[36m@@ -0,0 +1,22 @@[m
[32m+[m[32mfrom wtforms import ([m
[32m+[m[32m    BooleanField,[m
[32m+[m[32m    Form,[m
[32m+[m[32m    IntegerField,[m
[32m+[m[32m    RadioField,[m
[32m+[m[32m    SelectField,[m
[32m+[m[32m    StringField,[m
[32m+[m[32m    SubmitField,[m
[32m+[m[32m    TextAreaField,[m
[32m+[m[32m    validators,[m
[32m+[m[32m)[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32mclass SingleTag(Form):[m
[32m+[m
[32m+[m[32m    name = StringField('Tag name', [validators.InputRequired()], render_kw={"placeholder": "Name"})[m
[32m+[m[32m    save_button = SubmitField('Save', render_kw={"class": "pure-button pure-button-primary"})[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[1mdiff --git a/changedetectionio/blueprint/tags/templates/edit-tag.html b/changedetectionio/blueprint/tags/templates/edit-tag.html[m
[1mnew file mode 100644[m
[1mindex 00000000..4a762fb2[m
[1m--- /dev/null[m
[1m+++ b/changedetectionio/blueprint/tags/templates/edit-tag.html[m
[36m@@ -0,0 +1,103 @@[m
[32m+[m[32m{% extends 'base.html' %}[m
[32m+[m[32m{% block content %}[m
[32m+[m[32m{% from '_helpers.jinja' import render_field, render_checkbox_field, render_button %}[m
[32m+[m[32m{% from '_common_fields.jinja' import render_common_settings_form %}[m
[32m+[m[32m<script src="{{url_for('static_content', group='js', filename='tabs.js')}}" defer></script>[m
[32m+[m[32m<script>[m
[32m+[m
[32m+[m[32m/*{% if emailprefix %}*/[m
[32m+[m[32m    /*const email_notification_prefix=JSON.parse('{{ emailprefix|tojson }}');*/[m
[32m+[m[32m/*{% endif %}*/[m
[32m+[m
[32m+[m
[32m+[m[32m</script>[m
[32m+[m
[32m+[m[32m<script src="{{url_for('static_content', group='js', filename='watch-settings.js')}}" defer></script>[m
[32m+[m[32m<!--<script src="{{url_for('static_content', group='js', filename='limit.js')}}" defer></script>-->[m
[32m+[m[32m<script src="{{url_for('static_content', group='js', filename='notifications.js')}}" defer></script>[m
[32m+[m
[32m+[m[32m<div class="edit-form monospaced-textarea">[m
[32m+[m
[32m+[m[32m    <div class="tabs collapsable">[m
[32m+[m[32m        <ul>[m
[32m+[m[32m            <li class="tab" id=""><a href="#general">General</a></li>[m
[32m+[m[32m            <li class="tab"><a href="#filters-and-triggers">Filters &amp; Triggers</a></li>[m
[32m+[m[32m        </ul>[m
[32m+[m[32m    </div>[m
[32m+[m
[32m+[m[32m    <div class="box-wrap inner">[m
[32m+[m[32m        <form class="pure-form pure-form-stacked"[m
[32m+[m[32m              action="{{ url_for('tags.form_tag_edit', uuid=data.uuid) }}" method="POST">[m
[32m+[m[32m             <input type="hidden" name="csrf_token" value="{{ csrf_token() }}">[m
[32m+[m
[32m+[m[32m            <div class="tab-pane-inner" id="general">[m
[32m+[m[32m                <fieldset>[m
[32m+[m[32m                    <div class="pure-control-group">[m
[32m+[m[32m                        {{ render_field(form.title, placeholder="https://...", required=true, class="m-d") }}[m
[32m+[m[32m                    </div>[m
[32m+[m[32m                </fieldset>[m
[32m+[m[32m            </div>[m
[32m+[m
[32m+[m[32m            <div class="tab-pane-inner" id="filters-and-triggers">[m
[32m+[m[32m                    <div class="pure-control-group">[m
[32m+[m[32m                        {% set field = render_field(form.include_filters,[m
[32m+[m[32m                            rows=5,[m
[32m+[m[32m                            placeholder="#example[m
[32m+[m[32mxpath://body/div/span[contains(@class, 'example-class')]",[m
[32m+[m[32m                            class="m-d")[m
[32m+[m[32m                        %}[m
[32m+[m[32m                        {{ field }}[m
[32m+[m[32m                        {% if '/text()' in  field %}[m
[32m+[m[32m                          <span class="pure-form-message-inline"><strong>Note!: //text() function does not work where the &lt;element&gt; contains &lt;![CDATA[]]&gt;</strong></span><br>[m
[32m+[m[32m                        {% endif %}[m
[32m+[m[32m                        <span class="pure-form-message-inline">One rule per line, <i>any</i> rules that matches will be used.<br>[m
[32m+[m
[32m+[m[32m                    <ul>[m
[32m+[m[32m                        <li>CSS - Limit text to this CSS rule, only text matching this CSS rule is included.</li>[m
[32m+[m[32m                        <li>JSON - Limit text to this JSON rule, using either <a href="https://pypi.org/project/jsonpath-ng/" target="new">JSONPath</a> or <a href="https://stedolan.github.io/jq/" target="new">jq</a> (if installed).[m
[32m+[m[32m                            <ul>[m
[32m+[m[32m                                <li>JSONPath: Prefix with <code>json:</code>, use <code>json:$</code> to force re-formatting if required,  <a href="https://jsonpath.com/" target="new">test your JSONPath here</a>.</li>[m
[32m+[m[32m                                {% if jq_support %}[m
[32m+[m[32m                                <li>jq: Prefix with <code>jq:</code> and <a href="https://jqplay.org/" target="new">test your jq here</a>. Using <a href="https://stedolan.github.io/jq/" target="new">jq</a> allows for complex filtering and processing of JSON data with built-in functions, regex, filtering, and more. See examples and documentation <a href="https://stedolan.github.io/jq/manual/" target="new">here</a>.</li>[m
[32m+[m[32m                                {% else %}[m
[32m+[m[32m                                <li>jq support not installed</li>[m
[32m+[m[32m                                {% endif %}[m
[32m+[m[32m                            </ul>[m
[32m+[m[32m                        </li>[m
[32m+[m[32m                        <li>XPath - Limit text to this XPath rule, simply start with a forward-slash,[m
[32m+[m[32m                            <ul>[m
[32m+[m[32m                                <li>Example:  <code>//*[contains(@class, 'sametext')]</code> or <code>xpath://*[contains(@class, 'sametext')]</code>, <a[m
[32m+[m[32m                                href="http://xpather.com/" target="new">test your XPath here</a></li>[m
[32m+[m[32m                                <li>Example: Get all titles from an RSS feed <code>//title/text()</code></li>[m
[32m+[m[32m                            </ul>[m
[32m+[m[32m                            </li>[m
[32m+[m[32m                    </ul>[m
[32m+[m[32m                    Please be sure that you thoroughly understand how to write CSS, JSONPath, XPath{% if jq_support %}, or jq selector{%endif%} rules before filing an issue on GitHub! <a[m
[32m+[m[32m                                href="https://github.com/dgtlmoon/changedetection.io/wiki/CSS-Selector-help">here for more CSS selector help</a>.<br>[m
[32m+[m[32m                </span>[m
[32m+[m[32m                    </div>[m
[32m+[m[32m                <fieldset class="pure-control-group">[m
[32m+[m[32m                    {{ render_field(form.subtractive_selectors, rows=5, placeholder="header[m
[32m+[m[32mfooter[m
[32m+[m[32mnav[m
[32m+[m[32m.stockticker") }}[m
[32m+[m[32m                    <span class="pure-form-message-inline">[m
[32m+[m[32m                        <ul>[m
[32m+[m[32m                          <li> Remove HTML element(s) by CSS selector before text conversion. </li>[m
[32m+[m[32m                          <li> Add multiple elements or CSS selectors per line to ignore multiple parts of the HTML. </li>[m
[32m+[m[32m                        </ul>[m
[32m+[m[32m                      </span>[m
[32m+[m[32m                </fieldset>[m
[32m+[m
[32m+[m[32m            </div>[m
[32m+[m
[32m+[m[32m            <div id="actions">[m
[32m+[m[32m                <div class="pure-control-group">[m
[32m+[m[32m                    {{ render_button(form.save_button) }}[m
[32m+[m[32m                </div>[m
[32m+[m[32m            </div>[m
[32m+[m[32m        </form>[m
[32m+[m[32m    </div>[m
[32m+[m[32m</div>[m
[32m+[m
[32m+[m[32m{% endblock %}[m
[1mdiff --git a/changedetectionio/blueprint/tags/templates/groups-overview.html b/changedetectionio/blueprint/tags/templates/groups-overview.html[m
[1mnew file mode 100644[m
[1mindex 00000000..897d80e1[m
[1m--- /dev/null[m
[1m+++ b/changedetectionio/blueprint/tags/templates/groups-overview.html[m
[36m@@ -0,0 +1,50 @@[m
[32m+[m[32m{% extends 'base.html' %}[m
[32m+[m[32m{% block content %}[m
[32m+[m[32m{% from '_helpers.jinja' import render_simple_field, render_field %}[m
[32m+[m[32m<script src="{{url_for('static_content', group='js', filename='jquery-3.6.0.min.js')}}"></script>[m
[32m+[m
[32m+[m[32m<div class="box">[m
[32m+[m[32m    <form class="pure-form" action="{{ url_for('tags.form_tag_add') }}" method="POST" id="new-watch-form">[m
[32m+[m[32m        <input type="hidden" name="csrf_token" value="{{ csrf_token() }}" >[m
[32m+[m[32m        <fieldset>[m
[32m+[m[32m            <legend>Add a new organisational tag</legend>[m
[32m+[m[32m            <div id="watch-add-wrapper-zone">[m
[32m+[m[32m                <div>[m
[32m+[m[32m                    {{ render_simple_field(form.name, placeholder="watch label / tag") }}[m
[32m+[m[32m                </div>[m
[32m+[m[32m                <div>[m
[32m+[m[32m                    {{ render_simple_field(form.save_button, title="Save" ) }}[m
[32m+[m[32m                </div>[m
[32m+[m[32m            </div>[m
[32m+[m[32m        </fieldset>[m
[32m+[m[32m    </form>[m
[32m+[m
[32m+[m[32m    <!-- @todo maybe some overview matrix, 'tick' with which has notification, filter rules etc -->[m
[32m+[m[32m    <div id="watch-table-wrapper">[m
[32m+[m[32m        <table class="pure-table pure-table-striped watch-table">[m
[32m+[m[32m            <thead>[m
[32m+[m[32m            <tr>[m
[32m+[m[32m                <th></th>[m
[32m+[m[32m                <th></th>[m
[32m+[m[32m            </tr>[m
[32m+[m[32m            </thead>[m
[32m+[m[32m            <tbody>[m
[32m+[m[32m            {% if not available_tags|length %}[m
[32m+[m[32m            <tr>[m
[32m+[m[32m                <td colspan="2">No website organisational tags/groups configured</td>[m
[32m+[m[32m            </tr>[m
[32m+[m[32m            {% endif %}[m
[32m+[m[32m            {% for uuid, tag in available_tags.items()  %}[m
[32m+[m[32m            <tr id="{{ uuid }}" class="{{ loop.cycle('pure-table-odd', 'pure-table-even') }}">[m
[32m+[m[32m                <td class="title-col inline">{{tag.title}}</td>[m
[32m+[m[32m                <td>[m
[32m+[m[32m                    <a class="pure-button pure-button-primary" href="{{ url_for('tags.form_tag_edit', uuid=uuid) }}">Edit</a>&nbsp;[m
[32m+[m[32m                    <a class="pure-button pure-button-primary" href="{{ url_for('tags.form_tag_delete', uuid=uuid) }}">Delete</a>&nbsp;[m
[32m+[m[32m                </td>[m
[32m+[m[32m            </tr>[m
[32m+[m[32m            {% endfor %}[m
[32m+[m[32m            </tbody>[m
[32m+[m[32m        </table>[m
[32m+[m[32m    </div>[m
[32m+[m[32m</div>[m
[32m+[m[32m{% endblock %}[m
[1mdiff --git a/changedetectionio/forms.py b/changedetectionio/forms.py[m
[1mindex 1cca60cf..76960f46 100644[m
[1m--- a/changedetectionio/forms.py[m
[1m+++ b/changedetectionio/forms.py[m
[36m@@ -28,6 +28,8 @@[m [mfrom changedetectionio.notification import ([m
 [m
 from wtforms.fields import FormField[m
 [m
[32m+[m[32mdictfilt = lambda x, y: dict([ (i,x[i]) for i in x if i in set(y) ])[m
[32m+[m
 valid_method = {[m
     'GET',[m
     'POST',[m
[36m@@ -90,6 +92,21 @@[m [mclass SaltyPasswordField(StringField):[m
         else:[m
             self.data = False[m
 [m
[32m+[m[32mclass StringTagUUID(StringField):[m
[32m+[m[32m    # Is what is shown when field <input> is rendered[m
[32m+[m[32m    def _value(self):[m
[32m+[m[32m        # Tag UUID to name[m
[32m+[m
[32m+[m[32m        tag_uuids = [][m
[32m+[m[32m        for i in self.data:[m
[32m+[m[32m            tag = self.datastore.data['settings']['application']['tags'].get(i)[m
[32m+[m[32m            if tag:[m
[32m+[m[32m                tag_title = tag.get('title')[m
[32m+[m[32m                if tag_title:[m
[32m+[m[32m                    tag_uuids.append(tag_title)[m
[32m+[m
[32m+[m[32m        return ', '.join(tag_uuids)[m
[32m+[m
 class TimeBetweenCheckForm(Form):[m
     weeks = IntegerField('Weeks', validators=[validators.Optional(), validators.NumberRange(min=0, message="Should contain zero or more seconds")])[m
     days = IntegerField('Days', validators=[validators.Optional(), validators.NumberRange(min=0, message="Should contain zero or more seconds")])[m
[36m@@ -347,7 +364,7 @@[m [mclass quickWatchForm(Form):[m
     from . import processors[m
 [m
     url = fields.URLField('URL', validators=[validateURL()])[m
[31m-    tag = StringField('Group tag', [validators.Optional()])[m
[32m+[m[32m    tag = StringTagUUID('Group tag', [validators.Optional()])[m
     watch_submit_button = SubmitField('Watch', render_kw={"class": "pure-button pure-button-primary"})[m
     processor = RadioField(u'Processor', choices=processors.available_processors(), default="text_json_diff")[m
     edit_and_watch_submit_button = SubmitField('Edit > Watch', render_kw={"class": "pure-button pure-button-primary"})[m
[36m@@ -355,6 +372,7 @@[m [mclass quickWatchForm(Form):[m
 [m
 # Common to a single watch and the global settings[m
 class commonSettingsForm(Form):[m
[32m+[m
     notification_urls = StringListField('Notification URL List', validators=[validators.Optional(), ValidateAppRiseServers()])[m
     notification_title = StringField('Notification Title', default='ChangeDetection.io Notification - {{ watch_url }}', validators=[validators.Optional(), ValidateJinja2Template()])[m
     notification_body = TextAreaField('Notification Body', default='{{ watch_url }} had a change.', validators=[validators.Optional(), ValidateJinja2Template()])[m
[36m@@ -382,7 +400,7 @@[m [mclass SingleBrowserStep(Form):[m
 class watchForm(commonSettingsForm):[m
 [m
     url = fields.URLField('URL', validators=[validateURL()])[m
[31m-    tag = StringField('Group tag', [validators.Optional()], default='')[m
[32m+[m[32m    tag = StringTagUUID('Group tag', [validators.Optional()], default='')[m
 [m
     time_between_check = FormField(TimeBetweenCheckForm)[m
 [m
[1mdiff --git a/changedetectionio/importer.py b/changedetectionio/importer.py[m
[1mindex c39b7a68..51f78b59 100644[m
[1m--- a/changedetectionio/importer.py[m
[1m+++ b/changedetectionio/importer.py[m
[36m@@ -120,7 +120,7 @@[m [mclass import_distill_io_json(Importer):[m
                 except IndexError:[m
                     pass[m
 [m
[31m-[m
[32m+[m[32m# Does this need to be here anymore?[m
                 if d.get('tags', False):[m
                     extras['tag'] = ", ".join(d['tags'])[m
 [m
[1mdiff --git a/changedetectionio/model/App.py b/changedetectionio/model/App.py[m
[1mindex 29d3e49b..697d0d00 100644[m
[1m--- a/changedetectionio/model/App.py[m
[1m+++ b/changedetectionio/model/App.py[m
[36m@@ -43,6 +43,7 @@[m [mclass model(dict):[m
                     'schema_version' : 0,[m
                     'shared_diff_access': False,[m
                     'webdriver_delay': None , # Extra delay in seconds before extracting text[m
[32m+[m[32m                    'tags': {} #@todo use Tag.model initialisers[m
                 }[m
             }[m
         }[m
[1mdiff --git a/changedetectionio/model/Tag.py b/changedetectionio/model/Tag.py[m
[1mnew file mode 100644[m
[1mindex 00000000..1592cf08[m
[1m--- /dev/null[m
[1m+++ b/changedetectionio/model/Tag.py[m
[36m@@ -0,0 +1,19 @@[m
[32m+[m[32mfrom .Watch import base_config[m
[32m+[m[32mimport uuid[m
[32m+[m
[32m+[m[32mclass model(dict):[m
[32m+[m
[32m+[m[32m    def __init__(self, *arg, **kw):[m
[32m+[m
[32m+[m[32m        self.update(base_config)[m
[32m+[m
[32m+[m[32m        self['uuid'] = str(uuid.uuid4())[m
[32m+[m
[32m+[m[32m        if kw.get('default'):[m
[32m+[m[32m            self.update(kw['default'])[m
[32m+[m[32m            del kw['default'][m
[32m+[m
[32m+[m
[32m+[m[32m        # Goes at the end so we update the default object with the initialiser[m
[32m+[m[32m        super(model, self).__init__(*arg, **kw)[m
[32m+[m
[1mdiff --git a/changedetectionio/model/Watch.py b/changedetectionio/model/Watch.py[m
[1mindex 77c07497..7456d46d 100644[m
[1m--- a/changedetectionio/model/Watch.py[m
[1m+++ b/changedetectionio/model/Watch.py[m
[36m@@ -52,7 +52,7 @@[m [mbase_config = {[m
     'previous_md5_before_filters': False,  # Used for skipping changedetection entirely[m
     'proxy': None,  # Preferred proxy connection[m
     'subtractive_selectors': [],[m
[31m-    'tag': None,[m
[32m+[m[32m    'tag': [], # list of UUIDs to App.Tags[m
     'text_should_not_be_present': [],  # Text that should not present[m
     # Re #110, so then if this is set to None, we know to use the default value instead[m
     # Requires setting to None on submit if it's the same as the default[m
[36m@@ -455,9 +455,14 @@[m [mclass model(dict):[m
 [m
         return csv_output_filename[m
 [m
[31m-    @property[m
[31m-    # Return list of tags, stripped and lowercase, used for searching[m
[32m+[m[32m#    @property[m
[32m+[m[32m#    # Return list of tags, stripped and lowercase, used for searching[m
     def all_tags(self):[m
[32m+[m[32m        ret = [][m
[32m+[m[32m        if self.get('tag'):[m
[32m+[m[32m            for t in self.get('tag'):[m
[32m+[m[32m                name=[m
[32m+[m
         return [s.strip().lower() for s in self.get('tag','').split(',')][m
 [m
     def has_special_diff_filter_options_set(self):[m
[36m@@ -478,11 +483,11 @@[m [mclass model(dict):[m
         if os.path.isfile(os.path.join(self.watch_data_dir, 'headers.txt')):[m
             return True[m
 [m
[31m-        for f in self.all_tags:[m
[31m-            fname = "headers-"+re.sub(r'[\W_]', '', f).lower().strip() + ".txt"[m
[31m-            filepath = os.path.join(self.__datastore_path, fname)[m
[31m-            if os.path.isfile(filepath):[m
[31m-                return True[m
[32m+[m[32m#        for f in self.all_tags:[m
[32m+[m[32m#            fname = "headers-"+re.sub(r'[\W_]', '', f).lower().strip() + ".txt"[m
[32m+[m[32m#            filepath = os.path.join(self.__datastore_path, fname)[m
[32m+[m[32m#            if os.path.isfile(filepath):[m
[32m+[m[32m#                return True[m
 [m
         return False[m
 [m
[36m@@ -498,14 +503,14 @@[m [mclass model(dict):[m
             print(f"ERROR reading headers.txt at {filepath}", str(e))[m
 [m
         # Or each by tag, as tagname.txt in the main datadir[m
[31m-        for f in self.all_tags:[m
[31m-            fname = "headers-"+re.sub(r'[\W_]', '', f).lower().strip() + ".txt"[m
[31m-            filepath = os.path.join(self.__datastore_path, fname)[m
[31m-            try:[m
[31m-                if os.path.isfile(filepath):[m
[31m-                    headers.update(parse_headers_from_text_file(filepath))[m
[31m-            except Exception as e:[m
[31m-                print(f"ERROR reading headers.txt at {filepath}", str(e))[m
[32m+[m[32m#        for f in self.all_tags:[m
[32m+[m[32m#            fname = "headers-"+re.sub(r'[\W_]', '', f).lower().strip() + ".txt"[m
[32m+[m[32m#            filepath = os.path.join(self.__datastore_path, fname)[m
[32m+[m[32m#            try:[m
[32m+[m[32m#                if os.path.isfile(filepath):[m
[32m+[m[32m#                    headers.update(parse_headers_from_text_file(filepath))[m
[32m+[m[32m#            except Exception as e:[m
[32m+[m[32m#                print(f"ERROR reading headers.txt at {filepath}", str(e))[m
         return headers[m
 [m
     def get_last_fetched_before_filters(self):[m
[1mdiff --git a/changedetectionio/store.py b/changedetectionio/store.py[m
[1mindex 5e071ce5..615679f6 100644[m
[1m--- a/changedetectionio/store.py[m
[1m+++ b/changedetectionio/store.py[m
[36m@@ -16,6 +16,8 @@[m [mimport threading[m
 import time[m
 import uuid as uuid_builder[m
 [m
[32m+[m[32mdictfilt = lambda x, y: dict([ (i,x[i]) for i in x if i in set(y) ])[m
[32m+[m
 # Is there an existing library to ensure some data store (JSON etc) is in sync with CRUD methods?[m
 # Open a github issue if you know something :)[m
 # https://stackoverflow.com/questions/6190468/how-to-trigger-function-on-value-change[m
[36m@@ -178,20 +180,6 @@[m [mclass ChangeDetectionStore:[m
 [m
         return self.__data[m
 [m
[31m-    def get_all_tags(self):[m
[31m-        tags = [][m
[31m-        for uuid, watch in self.data['watching'].items():[m
[31m-            if watch['tag'] is None:[m
[31m-                continue[m
[31m-            # Support for comma separated list of tags.[m
[31m-            for tag in watch['tag'].split(','):[m
[31m-                tag = tag.strip()[m
[31m-                if tag not in tags:[m
[31m-                    tags.append(tag)[m
[31m-[m
[31m-        tags.sort()[m
[31m-        return tags[m
[31m-[m
     # Delete a single watch by UUID[m
     def delete(self, uuid):[m
         import pathlib[m
[36m@@ -254,10 +242,11 @@[m [mclass ChangeDetectionStore:[m
 [m
         self.needs_write_urgent = True[m
 [m
[31m-    def add_watch(self, url, tag="", extras=None, write_to_disk_now=True):[m
[32m+[m[32m    def add_watch(self, url, tag='', extras=None, write_to_disk_now=True):[m
 [m
         if extras is None:[m
             extras = {}[m
[32m+[m
         # should always be str[m
         if tag is None or not tag:[m
             tag = ''[m
[36m@@ -312,25 +301,29 @@[m [mclass ChangeDetectionStore:[m
             flash('Watch protocol is not permitted by SAFE_PROTOCOL_REGEX', 'error')[m
             return None[m
 [m
[31m-        with self.lock:[m
[31m-            # #Re 569[m
[31m-            new_watch = Watch.model(datastore_path=self.datastore_path, default={[m
[31m-                'url': url,[m
[31m-                'tag': tag,[m
[31m-                'date_created': int(time.time())[m
[31m-            })[m
 [m
[31m-            new_uuid = new_watch['uuid'][m
[31m-            logging.debug("Added URL {} - {}".format(url, new_uuid))[m
[32m+[m[32m        # #Re 569[m
[32m+[m[32m        # Could be in 'tags' var or extras, smash them together and strip[m
[32m+[m[32m        apply_extras['tag'] = [][m
[32m+[m[32m        tags = list(filter(None, list(set().union(tag.split(','), extras.get('tag', '').split(',')))))[m
[32m+[m[32m        for t in list(map(str.strip, tags)):[m
[32m+[m[32m            # for each stripped tag, add tag as UUID[m
[32m+[m[32m            apply_extras['tag'].append(self.add_tag(t))[m
[32m+[m
[32m+[m[32m        new_watch = Watch.model(datastore_path=self.datastore_path, url=url)[m
 [m
[31m-            for k in ['uuid', 'history', 'last_checked', 'last_changed', 'newest_history_key', 'previous_md5', 'viewed']:[m
[31m-                if k in apply_extras:[m
[31m-                    del apply_extras[k][m
[32m+[m[32m        new_uuid = new_watch.get('uuid')[m
 [m
[31m-            new_watch.update(apply_extras)[m
[31m-            self.__data['watching'][new_uuid] = new_watch[m
[32m+[m[32m        logging.debug("Added URL {} - {}".format(url, new_uuid))[m
[32m+[m
[32m+[m[32m        for k in ['uuid', 'history', 'last_checked', 'last_changed', 'newest_history_key', 'previous_md5', 'viewed']:[m
[32m+[m[32m            if k in apply_extras:[m
[32m+[m[32m                del apply_extras[k][m
[32m+[m
[32m+[m[32m        new_watch.update(apply_extras)[m
[32m+[m[32m        new_watch.ensure_data_dir_exists()[m
[32m+[m[32m        self.__data['watching'][new_uuid] = new_watch[m
 [m
[31m-        self.__data['watching'][new_uuid].ensure_data_dir_exists()[m
 [m
         if write_to_disk_now:[m
             self.sync_to_json()[m
[36m@@ -523,6 +516,33 @@[m [mclass ChangeDetectionStore:[m
 [m
         return headers[m
 [m
[32m+[m[32m    def add_tag(self, name):[m
[32m+[m[32m        # If name exists, return that[m
[32m+[m[32m        n = name.strip().lower()[m
[32m+[m[32m        for uuid, tag in self.__data['settings']['application'].get('tags',{}).items():[m
[32m+[m[32m            if n == tag.get('title','').lower().strip():[m
[32m+[m[32m                return uuid[m
[32m+[m
[32m+[m[32m        # Eventually almost everything todo with a watch will apply as a Tag[m
[32m+[m[32m        # So we use the same model as Watch[m
[32m+[m
[32m+[m[32m        new_tag = Watch.model(datastore_path=self.datastore_path, default={[m
[32m+[m[32m            'title': name.strip(),[m
[32m+[m[32m            'date_created': int(time.time())[m
[32m+[m[32m        })[m
[32m+[m
[32m+[m[32m        new_uuid = new_tag['uuid'][m
[32m+[m
[32m+[m[32m        self.__data['settings']['application']['tags'].update({new_uuid: new_tag})[m
[32m+[m
[32m+[m[32m        return new_uuid[m
[32m+[m
[32m+[m[32m    def get_all_tags_for_watch(self, watch_uuid):[m
[32m+[m[32m        """This should be in Watch model but Watch doesn't have access to datastore, not sure how to solve that yet"""[m
[32m+[m[32m        watch = self.data['watching'].get(watch_uuid)[m
[32m+[m[32m        if watch:[m
[32m+[m[32m            return dictfilt(self.__data['settings']['application']['tags'], watch.get('tags',[]))[m
[32m+[m[32m        return [][m
 [m
     # Run all updates[m
     # IMPORTANT - Each update could be run even when they have a new install and the schema is correct[m
[1mdiff --git a/changedetectionio/templates/base.html b/changedetectionio/templates/base.html[m
[1mindex 30ea733d..52915ab4 100644[m
[1m--- a/changedetectionio/templates/base.html[m
[1m+++ b/changedetectionio/templates/base.html[m
[36m@@ -58,6 +58,9 @@[m
           {% if current_user.is_authenticated or not has_password %}[m
             {% if not[m
             current_diff_url %}[m
[32m+[m[32m              <li class="pure-menu-item">[m
[32m+[m[32m                <a href="{{ url_for('tags.tags_overview_page')}}" class="pure-menu-link">GROUPS</a>[m
[32m+[m[32m              </li>[m
               <li class="pure-menu-item">[m
                 <a href="{{ url_for('settings_page')}}" class="pure-menu-link">SETTINGS</a>[m
               </li>[m
[1mdiff --git a/changedetectionio/templates/watch-overview.html b/changedetectionio/templates/watch-overview.html[m
[1mindex fe61f626..2c2fd7e2 100644[m
[1m--- a/changedetectionio/templates/watch-overview.html[m
[1m+++ b/changedetectionio/templates/watch-overview.html[m
[36m@@ -47,9 +47,9 @@[m
     {% if search_q %}<div id="search-result-info">Searching "<strong><i>{{search_q}}</i></strong>"</div>{% endif %}[m
     <div>[m
         <a href="{{url_for('index')}}" class="pure-button button-tag {{'active' if not active_tag }}">All</a>[m
[31m-        {% for tag in tags %}[m
[32m+[m[32m        {% for uuid, tag in tags.items() %}[m
             {% if tag != "" %}[m
[31m-                <a href="{{url_for('index', tag=tag) }}" class="pure-button button-tag {{'active' if active_tag == tag }}">{{ tag }}</a>[m
[32m+[m[32m                <a href="{{url_for('index', tag=uuid) }}" class="pure-button button-tag {{'active' if active_tag == uuid }}">{{ tag.title }}</a>[m
             {% endif %}[m
         {% endfor %}[m
     </div>[m
[36m@@ -144,7 +144,9 @@[m
                     {% endif %}[m
 [m
                     {% if not active_tag %}[m
[31m-                    <span class="watch-tag-list">{{ watch.tag}}</span>[m
[32m+[m[32m                        {% for t in watch.tag %}[m
[32m+[m[32m                          <span class="watch-tag-list">{{ tags[t].title }}</span>[m
[32m+[m[32m                        {% endfor %}[m
                     {% endif %}[m
                 </td>[m
                 <td class="last-checked">{{watch|format_last_checked_time|safe}}</td>[m
[1mdiff --git a/changedetectionio/tests/test_access_control.py b/changedetectionio/tests/test_access_control.py[m
[1mindex f931f66e..b8063683 100644[m
[1m--- a/changedetectionio/tests/test_access_control.py[m
[1m+++ b/changedetectionio/tests/test_access_control.py[m
[36m@@ -45,6 +45,15 @@[m [mdef test_check_access_control(app, client, live_server):[m
         res = client.get(url_for("diff_history_page", uuid="first"))[m
         assert b'Random content' in res.data[m
 [m
[32m+[m[32m        # Check wrong password does not let us in[m
[32m+[m[32m        res = c.post([m
[32m+[m[32m            url_for("login"),[m
[32m+[m[32m            data={"password": "WRONG PASSWORD"},[m
[32m+[m[32m            follow_redirects=True[m
[32m+[m[32m        )[m
[32m+[m
[32m+[m[32m        assert b"LOG OUT" not in res.data[m
[32m+[m[32m        assert b"Incorrect password" in res.data[m
 [m
 [m
         # Menu should not be available yet[m
[1mdiff --git a/changedetectionio/tests/test_add_replace_remove_filter.py b/changedetectionio/tests/test_add_replace_remove_filter.py[m
[1mindex fa74fe96..d575925e 100644[m
[1m--- a/changedetectionio/tests/test_add_replace_remove_filter.py[m
[1m+++ b/changedetectionio/tests/test_add_replace_remove_filter.py[m
[36m@@ -105,7 +105,7 @@[m [mdef test_check_removed_line_contains_trigger(client, live_server):[m
 [m
 [m
 def test_check_add_line_contains_trigger(client, live_server):[m
[31m-[m
[32m+[m[32m    #live_server_setup(live_server)[m
     sleep_time_for_fetch_thread = 3[m
 [m
     # Give the endpoint time to spin up[m
[1mdiff --git a/changedetectionio/tests/test_api.py b/changedetectionio/tests/test_api.py[m
[1mindex 4fa6fa85..bd16fab0 100644[m
[1m--- a/changedetectionio/tests/test_api.py[m
[1m+++ b/changedetectionio/tests/test_api.py[m
[36m@@ -57,6 +57,7 @@[m [mdef test_setup(client, live_server):[m
     live_server_setup(live_server)[m
 [m
 def test_api_simple(client, live_server):[m
[32m+[m[32m    live_server_setup(live_server)[m
 [m
     api_key = extract_api_key_from_UI(client)[m
 [m
[36m@@ -264,7 +265,7 @@[m [mdef test_access_denied(client, live_server):[m
 [m
 def test_api_watch_PUT_update(client, live_server):[m
 [m
[31m-    #live_server_setup(live_server)[m
[32m+[m[32m    live_server_setup(live_server)[m
     api_key = extract_api_key_from_UI(client)[m
     time.sleep(1)[m
     # Create a watch[m
[36m@@ -297,6 +298,8 @@[m [mdef test_api_watch_PUT_update(client, live_server):[m
         url_for("edit_page", uuid=watch_uuid),[m
     )[m
     assert b"cookie: yum" in res.data, "'cookie: yum' found in 'headers' section"[m
[32m+[m[32m    assert b"One" in res.data, "Tag 'One' was found"[m
[32m+[m[32m    assert b"Two" in res.data, "Tag 'Two' was found"[m
 [m
     # HTTP PUT ( UPDATE an existing watch )[m
     res = client.put([m
[36m@@ -319,7 +322,8 @@[m [mdef test_api_watch_PUT_update(client, live_server):[m
     )[m
     assert b"new title" in res.data, "new title found in edit page"[m
     assert b"552" in res.data, "552 minutes found in edit page"[m
[31m-    assert b"One, Two" in res.data, "Tag 'One, Two' was found"[m
[32m+[m[32m    assert b"One" in res.data, "Tag 'One' was found"[m
[32m+[m[32m    assert b"Two" in res.data, "Tag 'Two' was found"[m
     assert b"cookie: all eaten" in res.data, "'cookie: all eaten' found in 'headers' section"[m
 [m
     ######################################################[m
[1mdiff --git a/changedetectionio/update_worker.py b/changedetectionio/update_worker.py[m
[1mindex 18fe9cfb..ce89269a 100644[m
[1m--- a/changedetectionio/update_worker.py[m
[1m+++ b/changedetectionio/update_worker.py[m
[36m@@ -177,7 +177,7 @@[m [mclass update_worker(threading.Thread):[m
                 uuid = queued_item_data.item.get('uuid')[m
                 self.current_uuid = uuid[m
 [m
[31m-                if uuid in list(self.datastore.data['watching'].keys()):[m
[32m+[m[32m                if uuid in list(self.datastore.data['watching'].keys()) and self.datastore.data['watching'][uuid].get('url'):[m
                     changed_detected = False[m
                     contents = b''[m
                     process_changedetection_results = True[m
