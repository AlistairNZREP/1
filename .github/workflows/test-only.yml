name: ChangeDetection.io App Test

# Triggers the workflow on push or pull request events
on: [push, pull_request]

jobs:
  test-application:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # Mainly just for link/flake8
      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Lint with flake8
        run: |
          pip3 install flake8
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Spin up ancillary testable services
        run: |
          
          docker network create changedet-network
          
          # Test proxy list handling, starting two squids on different ports
          # Each squid adds a different header to the response, which is the main thing we test for.
          docker run --network changedet-network -d --name squid-one --rm -v `pwd`/changedetectionio/tests/proxy_list/squid.conf:/etc/squid/conf.d/debian.conf -p 3128:3128 ubuntu/squid:4.13-21.10_edge
          docker run --network changedet-network -d --name squid-two --rm -v `pwd`/changedetectionio/tests/proxy_list/squid.conf:/etc/squid/conf.d/debian.conf -p 3129:3128 ubuntu/squid:4.13-21.10_edge
          
          # Selenium+browserless
          docker run --network changedet-network -d --name selenium  -p 4444:4444 --rm --shm-size="2g"  selenium/standalone-chrome-debug:3.141.59
          docker run --network changedet-network -d --name browserless -e "DEFAULT_LAUNCH_ARGS=[\"--window-size=1920,1080\"]" --rm  -p 3000:3000  --shm-size="2g"  browserless/chrome:1.53-chrome-stable

      - name: Build changedetection.io container for testing
        run: |         
          # Build a changedetection.io container and start testing inside
          docker build . -t test-changedetectionio

      - name: Test built container with pytest
        run: |
          
          # Unit tests
          docker run test-changedetectionio  bash -c 'python3 -m unittest changedetectionio.tests.unit.test_notification_diff'
          
          # All tests
          docker run --network changedet-network  test-changedetectionio  bash -c 'pip3 install -r /requirements-dev.txt; cd changedetectionio;./run_all_tests.sh'

          


